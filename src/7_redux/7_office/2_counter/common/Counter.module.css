.row {
  display: flex;

  /* 在交叉轴上如何对齐: 即现在的垂直位置, Y轴
      flex-start：交叉轴的起点对齐。
      flex-end：交叉轴的终点对齐。
      center：交叉轴的中点对齐。
      baseline: 项目的第一行文字的基线对齐。
      stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。
  */
  align-items: center;

  /* 在主轴上的对齐方式: 默认横轴
      flex-start（默认值）：左对齐
      flex-end：右对齐
      center： 居中
      space-between：两端对齐，项目之间的间隔都相等。
      space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。
  */
  justify-content: center;
}

.row > button {
  margin: 5px;
}

.row:not(:last-child) {
  margin-bottom: 16px;
}

.value {
  font-size: 78px;
  padding: 0 16px;
  margin-left: 5px;
}

.button {
  font-size: 32px;
  padding: 0px 12px;
  border: 2px solid transparent;
  border-radius: 5px;
  background-color: rgba(112, 76, 182, 0.1);
  color: rgb(112, 76, 182);
  cursor: pointer;
  /* 下面的hover, focus, active等伪类可以在规定时间内完成,动画渐变效果 */
  transition: all .2s;
}

.button:hover,
.button:focus {
  border: 2px solid rgba(112, 76, 182, 0.4);
}

.button:active {
  background-color: rgba(247, 192, 14, 0.2);
}

.textbox {
  font-size: 32px;
  width: 64px;
  text-align: center;
  margin-right: 5px;
}



.asyncButton {
  composes: button;
  position: relative;
}

.asyncButton:after {
  content: '';
  background-color: rgba(243, 16, 16, 0.74);
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  opacity: 0;
  transition: width 1s linear, opacity 0.5s ease 1s;
}

.asyncButton:active:after {
  width: 0%;
  opacity: 1;
  transition: 0s;
}
